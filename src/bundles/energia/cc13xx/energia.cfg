/*
 *  ======== energia.cfg ========
 *  @fileOverview Wiring Configuration
 */
xdc.loadPackage("ti.runtime.wiring.cc13xx");

//var ROM = xdc.useModule('ti.sysbios.rom.ROM');
//ROM.romName = ROM.CC1350;
//Program.cpu.deviceName = "CC1350_ROM";
Program.cpu.deviceName = "CC1310";

/* ================ General configuration ================ */
var Defaults = xdc.useModule('xdc.runtime.Defaults');
var Diags = xdc.useModule('xdc.runtime.Diags');
var Error = xdc.useModule('xdc.runtime.Error');
var Main = xdc.useModule('xdc.runtime.Main');
var Memory = xdc.useModule('xdc.runtime.Memory');
var System = xdc.useModule('xdc.runtime.System');
var Text = xdc.useModule('xdc.runtime.Text');

var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Clock = xdc.useModule('ti.sysbios.knl.Clock');
var Event = xdc.useModule('ti.sysbios.knl.Event');
var Mailbox = xdc.useModule('ti.sysbios.knl.Mailbox');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Swi = xdc.useModule('ti.sysbios.knl.Swi');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');
var Timer = xdc.useModule('ti.sysbios.hal.Timer');
var Load = xdc.useModule('ti.sysbios.utils.Load');

/* add GateMutex because the wiring library uses it */
var GateMutex = xdc.useModule('ti.sysbios.gates.GateMutex');

/* HACK!! we must configure family-specific Hwi module */
var Settings = xdc.module("ti.sysbios.family.Settings");
var hwiDelegate = Settings.getDefaultHwiDelegate();
xdc.module(hwiDelegate).isTiva = true;

/* Use primary HeapMem instance to use linker-defined memory region  */
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');
HeapMem.primaryHeapBaseAddr = "&__UNUSED_SRAM_start__";
HeapMem.primaryHeapEndAddr = "&__UNUSED_SRAM_end__";
var heapMemParams = new HeapMem.Params();
heapMemParams.usePrimaryHeap = true;
Program.global.heap0 = HeapMem.create(heapMemParams);
Memory.defaultHeapInstance = Program.global.heap0;

/*  Don't add driverlib to generated linker command file (so
 *  closure will not have any absolute paths) 
 */
var Platform = Program.platform.$module;
Platform.addDriverLibs = false;

/* ================ System configuration ================ */

var SysCallback = xdc.useModule('xdc.runtime.SysCallback');
System.SupportProxy = SysCallback;

/* trim extended formats as much as possible (add %f??) */
System.extendedFormats = "%$S";

/* move all log/error strings off the target (let the host do the display) */
Text.isLoaded = false;

/* CC13xx ROM binds Timestamp to cc26xx timer */
var Timestamp = xdc.useModule('xdc.runtime.Timestamp');

/* Pull in SysTick TimestampProvider for micros(), etc */
var TimestampProvider = xdc.useModule('ti.sysbios.family.arm.m3.TimestampProvider');

/* Save power using DYNAMIC tick mode */
Clock.tickMode = Clock.TickMode_DYNAMIC;
Clock.tickPeriod = 10; /* for compatibility with BLE libraries */

/* ================ Driver configuration ================ */
var driversConfig = xdc.useModule('ti.drivers.Config');
//driversConfig.libType = driversConfig.LibType_Instrumented; /* or LibType_NonInstrumented */

/* ================ SYS/BIOS configuration =============== */
BIOS.libType = BIOS.LibType_Debug;
BIOS.libType = BIOS.LibType_Custom;
BIOS.assertsEnabled = false;
BIOS.logsEnabled = false;
Program.stack = 1024;

/* place xdc meta data explicitly */
Program.sectionsExclude = "xdc\.meta";

Task.idleTaskStackSize = 1024;
Task.numPriorities = 4;            /* set # of task priorities to save space */
Task.common$.namedInstance = true; /* instance names used by debug monitor */

/* disable elaborate Hwi exception dump */
var m3Hwi = xdc.useModule(hwiDelegate);
m3Hwi.enableException = false;
m3Hwi.excHandlerFunc = null;

/* use spin loops for abort and exit */
System.maxAtexitHandlers = 4;
System.exitFxn = System.exitSpin;
System.abortFxn = System.abortSpin;

/* minimize Flash and RAM usage of Error module */
Error.policyFxn = Error.policySpin; /* malloc() will spin on "out of memory" */
Error.raiseHook = null;
Error.maxDepth = 2;

/* remove Swi support */
/* The cc26xx TI-RTOS drivers internally use Swis. So Swis must be left enabled */
//BIOS.swiEnabled = false;

/* disable Hwi and Task stack checking */
Hwi.checkStackFlag = false;
Task.checkStackFlag = false;

/* include the useful Seconds module */
var Seconds = xdc.useModule('ti.sysbios.hal.Seconds');

/* Map hal.Timer to the LM4 Timer module */
var lm4Timer = xdc.useModule('ti.sysbios.family.arm.lm4.Timer');
Timer.TimerProxy = lm4Timer;

/*
 * compile with default 'ccfg' structure, set this to false if you
 * want to supply your own ccfg structure.
 */
var Boot = xdc.useModule('ti.sysbios.family.arm.cc26xx.Boot');
Boot.customerConfig = true;

/* remove Hwi processing code from Load.c */
var Build = xdc.useModule('ti.sysbios.Build');
Build.ccArgs.$add("-Dti_sysbios_utils_Load_hwiEnabled__D=FALSE");

var DLIBROOT = Program.platform.$module.findDriverLib();
Build.ccArgs.$add("-I" + DLIBROOT);

/* add custom startup code to work around 2.21 CC26xx UART driver deficiencies */
var Startup = xdc.useModule('xdc.runtime.Startup');
Startup.lastFxns.$add('&energiaFirstFxn');

