/*
 *  ======== energia.cfg ========
 *  @fileOverview Wiring Configuration
 */
xdc.loadPackage("ti.runtime.wiring.msp432");

/* ================ General configuration ================ */
var Defaults = xdc.useModule('xdc.runtime.Defaults');
var Diags = xdc.useModule('xdc.runtime.Diags');
var Error = xdc.useModule('xdc.runtime.Error');
var Main = xdc.useModule('xdc.runtime.Main');
var Memory = xdc.useModule('xdc.runtime.Memory');
var System = xdc.useModule('xdc.runtime.System');
var Text = xdc.useModule('xdc.runtime.Text');

var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Clock = xdc.useModule('ti.sysbios.knl.Clock');
var Event = xdc.useModule('ti.sysbios.knl.Event');
var Mailbox = xdc.useModule('ti.sysbios.knl.Mailbox');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Swi = xdc.useModule('ti.sysbios.knl.Swi');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');
var Timer = xdc.useModule('ti.sysbios.hal.Timer');
var Load = xdc.useModule('ti.sysbios.utils.Load');

var Idle = xdc.useModule('ti.sysbios.knl.Idle');
Idle.addFunc('&Power_idleFunc');  /* add the Power module's idle function */

/* add GateMutex because the wiring library uses it */
var GateMutex = xdc.useModule('ti.sysbios.gates.GateMutex');

var ClockFreqs = xdc.useModule('ti.sysbios.family.arm.msp432.ClockFreqs');
ClockFreqs.ACLK   = 32768;
ClockFreqs.SMCLK  = 12000000;
ClockFreqs.HSMCLK = 24000000;

/* Use Timer module used by PWM module */
var msp432Timer = xdc.useModule('ti.sysbios.family.arm.msp432.Timer');
var msp432TimerParams = new msp432Timer.Params;
msp432TimerParams.clockSource = msp432Timer.Source_ACLK;
msp432TimerParams.period = Clock.tickPeriod;
msp432TimerParams.runMode = Timer.RunMode_CONTINUOUS;
Program.global.energiaClockTimer = msp432Timer.create(3, '&energiaClockTickFxnP4111', msp432TimerParams);

BIOS.cpuFreq.lo = 48000000;

/* HACK!! we must configure family-specific Hwi module */
var Settings = xdc.module("ti.sysbios.family.Settings");
var hwiDelegate = Settings.getDefaultHwiDelegate();
xdc.module(hwiDelegate).isTiva = true;

/* Use primary HeapMem instance to use linker-defined memory region  */
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');
HeapMem.primaryHeapBaseAddr = "&__UNUSED_SRAM_start__";
HeapMem.primaryHeapEndAddr = "&__UNUSED_SRAM_end__";
var heapMemParams = new HeapMem.Params();
heapMemParams.usePrimaryHeap = true;
Program.global.heap0 = HeapMem.create(heapMemParams);
Memory.defaultHeapInstance = Program.global.heap0;

/*  Don't add driverlib to generated linker command file (so
 *  closure will not have any absolute paths) 
 */
var Platform = Program.platform.$module;
Platform.addDriverLibs = false;

/* ================ System configuration ================ */

var SysCallback = xdc.useModule('xdc.runtime.SysCallback');
System.SupportProxy = SysCallback;

/* trim extended formats as much as possible (add %f??) */
System.extendedFormats = "%$S";

/* move all log/error strings off the target (let the host do the display) */
Text.isLoaded = false;

/* setup Timestamp to use SysTick timer */
var TimestampProvider = xdc.useModule('ti.sysbios.family.arm.m3.TimestampProvider');
TimestampProvider.configTimer = true;

var Timestamp = xdc.useModule('xdc.runtime.Timestamp');
Timestamp.SupportProxy = TimestampProvider;

/*
 * Use timer 3 so that Timer 0/1 can be used for mappable PWM resources
 * and Timer 2 can be used for fixed mapped PWM resources
 * tone() and servo() will attempt to use Timers 0, 1, or 2 if they are not
 * being used for analogWrite() pins.
 */
//Clock.timerId = 3;

Clock.tickMode = Clock.TickMode_PERIODIC;
Clock.tickSource = Clock.TickSource_USER;

/* ================ POSIX configuration ================ */
var Settings = xdc.useModule('ti.posix.tirtos.Settings');

/* ================ SYS/BIOS configuration =============== */
BIOS.libType = BIOS.LibType_Debug;
BIOS.libType = BIOS.LibType_Custom;
BIOS.assertsEnabled = false;
BIOS.logsEnabled = false;
Program.stack = 1024;

/* place xdc meta data explicitly */
Program.sectionsExclude = "xdc\.meta";

Task.idleTaskStackSize = 1024;
Task.numPriorities = 4;            /* set # of task priorities to save space */
Task.common$.namedInstance = true; /* instance names used by debug monitor */

/* disable elaborate Hwi exception dump */
var m3Hwi = xdc.useModule(hwiDelegate);
m3Hwi.enableException = false;
m3Hwi.excHandlerFunc = null;

/* use spin loops for abort and exit */
System.maxAtexitHandlers = 4;
System.exitFxn = System.exitSpin;
System.abortFxn = System.abortSpin;

/* minimize Flash and RAM usage of Error module */
Error.policyFxn = Error.policySpin; /* malloc() will spin on "out of memory" */
Error.raiseHook = null;
Error.maxDepth = 2;

/* remove Swi support */
BIOS.swiEnabled = false;

/* disable Hwi and Task stack checking */
Hwi.checkStackFlag = false;
Task.checkStackFlag = false;

/* include the useful Seconds module */
var Seconds = xdc.useModule('ti.sysbios.hal.Seconds');

/* remove Hwi processing code from Load.c */
var Build = xdc.useModule('ti.sysbios.Build');
Build.ccArgs.$add("-Dti_sysbios_utils_Load_hwiEnabled__D=FALSE");
