/*
 *  ======== package.bld ========
 */
Pkg.attrs.profile = "release";
//Pkg.attrs.profile = "debug";
Pkg.attrs.exportAll = true;

var platform = xdc.module("ti.platforms.emt3200.Platform");
var DLIBROOT = platform.findDriverLib();
print (DLIBROOT);

var INCS = '-I"' + DLIBROOT + '" '
       + '-I"' + DLIBROOT + '/driverlib" '
       + '-I"' + DLIBROOT + '/inc" '
       + '-I"' + xdc.getPackageBase("ti.mw.wifi.cc3x00") + '" ';


Pkg.uses = ["ti/runtime/wiring", "ti/runtime/wiring/cc3200/libraries/WiFi"];

var PLATFORM = "ti.platforms.emt3200:CC3200_LAUNCHXL";
var DEFS = "-Dxdc__nolocalstring=1 -DBOARD_CC3200_LAUNCHXL";

//var PLATFORM = "ti.platforms.emt3200:CC3200STK_WIFI";
//var DEFS = "-Dxdc__nolocalstring=1 -DBOARD_CC3200STK_WIFI";

var MAIN = "main.cpp";
var SRCS = getSources(".");
print(SRCS);
print(MAIN);

for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];

    var cxxopts = targ.$name.indexOf("gnu.targets") == 0 ? "-fno-rtti" : "";

    var lib = Pkg.addLibrary("lib/sketches", targ, {defs: DEFS, incs: INCS});
    lib.addObjects(SRCS, {copts: cxxopts});

    var exe = Pkg.addExecutable("energia", targ, PLATFORM, {defs: DEFS, incs: INCS});
    exe.addObjects([MAIN], {copts: cxxopts});

    break;  /* comment this out to build using TI compiler */
}

/*
 *  ======== getSources ========
 *  Return array of *.c and *.cpp files in the current working directory
 */
function getSources(dir)
{
    var result = [];
    var list = java.io.File(dir).list();
    for (var i = 0; i < list.length; i++) {
        var file = String(list[i]);
        if (file.match(/\.c$|\.cpp$/) && file[0] != '.' && file != MAIN) {
            result.push(file);
        }
    }
    return (result);
}
